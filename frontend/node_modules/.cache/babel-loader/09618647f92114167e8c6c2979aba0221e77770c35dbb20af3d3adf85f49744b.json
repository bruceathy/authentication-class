{"ast":null,"code":"var _jsxFileName = \"/Users/bruce/Documents/Projects/authentication-course/frontend/src/pages/Authentication.js\";\nimport { redirect } from \"react-router-dom\";\nimport AuthForm from \"../components/AuthForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw new Response(JSON.stringify({\n      message: \"Unsupported auth mode.\"\n    }), {\n      status: 422,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\")\n  };\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not authenticate user.\"\n    }), {\n      status: 500,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n  const resData = await response.json();\n  const token = resData.token;\n  localStorage.setItem(\"token\", token);\n  return redirect(\"/\");\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["redirect","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","Response","JSON","stringify","message","status","headers","data","formData","authData","email","password","response","fetch","method","body","ok","resData","json","token","localStorage","setItem","$RefreshReg$"],"sources":["/Users/bruce/Documents/Projects/authentication-course/frontend/src/pages/Authentication.js"],"sourcesContent":["import { redirect } from \"react-router-dom\";\nimport AuthForm from \"../components/AuthForm\";\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({ request }) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw new Response(JSON.stringify({ message: \"Unsupported auth mode.\" }), {\n      status: 422,\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n  }\n\n  const data = await request.formData();\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\"),\n  };\n\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(authData),\n  });\n\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n\n  if (!response.ok) {\n    throw new Response(\n      JSON.stringify({ message: \"Could not authenticate user.\" }),\n      {\n        status: 500,\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n\n  const resData = await response.json();\n  const token = resData.token;\n\n  localStorage.setItem(\"token\", token);\n\n  return redirect(\"/\");\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACxC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEhD,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACzC,MAAM,IAAIE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAyB,CAAC,CAAC,EAAE;MACxEC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;EACJ;EAEA,MAAMC,IAAI,GAAG,MAAMZ,OAAO,CAACa,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACP,GAAG,CAAC,OAAO,CAAC;IACxBW,QAAQ,EAAEJ,IAAI,CAACP,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGd,IAAI,EAAE;IAC5De,MAAM,EAAE,MAAM;IACdR,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDS,IAAI,EAAEb,IAAI,CAACC,SAAS,CAACM,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAIG,QAAQ,CAACP,MAAM,KAAK,GAAG,IAAIO,QAAQ,CAACP,MAAM,KAAK,GAAG,EAAE;IACtD,OAAOO,QAAQ;EACjB;EAEA,IAAI,CAACA,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM,IAAIf,QAAQ,CAChBC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA+B,CAAC,CAAC,EAC3D;MACEC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CACF,CAAC;EACH;EAEA,MAAMW,OAAO,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EACrC,MAAMC,KAAK,GAAGF,OAAO,CAACE,KAAK;EAE3BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EAEpC,OAAOnC,QAAQ,CAAC,GAAG,CAAC;AACtB;AAAC,IAAAS,EAAA;AAAA6B,YAAA,CAAA7B,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}